@using FDTS.Models.ViewModels
@model TraceDocumentViewModel
@{
    /**/

    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "TraceDocumentGridView";
        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "TraceDocument", Action = "TraceDocumentGridViewPartial", };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "TraceDocument", Action = "TraceDocumentGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "TraceDocument", Action = "TraceDocumentGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "TraceDocument", Action = "TraceDocumentGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;



        settings.Columns.Add(col =>
        {
            col.FieldName = "Barcode";
            col.Caption = "Barcode Number";
            col.PropertiesEdit.DisplayFormatString = "D11";
            col.SortDescending();
        });
        settings.Columns.Add("DateCreated");
        settings.Columns.Add(col =>
        {
            col.FieldName = "FullName";
            col.Caption = "Created By";
        });
        //settings.Columns.Add(col =>
        //{
        //    col.SetDataItemTemplateContent(content =>
        //    {
        //        Html.DevExpress().Button(btnSettings =>
        //        {
        //            btnSettings.Name = "btnPrint_" + content.KeyValue;
        //            btnSettings.Text = "Print";
        //            btnSettings.ClientSideEvents.Click = "function(s,e){PrintTraceDocument(" + content.KeyValue + ")}";

        //        }).GetHtml();
        //    });
        //});
        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
        settings.SettingsDetail.ShowDetailRow = false;

        settings.SetDetailRowTemplateContent(col =>
        {
            ViewContext.Writer.Write("<h4>Trace Transactions</h4>");
            Html.RenderAction("TraceTransactionGridViewPartial", "TraceTransaction", new { TraceDocumentId = col.KeyValue });
        });
        settings.SetEditFormTemplateContent(col =>
        {
            Html.RenderAction("AddEditTraceDocumentPartial", "TraceDocument", new { TraceDocumentId = col.KeyValue });
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.BindToEF(string.Empty,string.Empty, (s, e) =>
{
    e.QueryableSource = Model.TraceDocuments;
}).GetHtml()